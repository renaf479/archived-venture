/***** Units *****/
$gridUnit: 8px;
$gridToolbarPrimary: $gridUnit * 5;
$gridToolbarSecondary: $gridUnit * 6;

$gridZIndex: (
	modal: 1000,
	top: 900,
	toolbarPrimary: 500,
	toolbarSecondary: 400,
	bottom: 0
);

/***** Colors *****/
$colorPrimary: #546e7a; /*600*/
$colorPrimaryLight: #eceff1; /*50*/
$colorPrimaryDark: #37474f; /*800*/

$colorAccent: #ff3d00; /*A400*/
$colorAccentLight: #ff6e40; /*A200*/
$colorAccentDark: #dd2c00; /*A700*/

$textColorPrimary: #ffffff;
$textColorInverse: #000;

$windowBackground: #f9f9f9;
$windowDivider: rgba(#000000, .12);

/***** Extend *****/
.left {
	float: left;
}

.right {
	float: right;
}

.clear:after {
	content: '';
    display: table;
    clear: both;
}

.shadow {
	box-shadow: 0 5px 3px -3px rgba(0, 0, 0, 0.25);
}

.hover {
	cursor: pointer;
}

.inline {
	display: inline-block;
	vertical-align: top;
}

.alignMiddle {
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

.transition {
	transition: all 0.2s ease;
}

/***** Mixins *****/

@mixin circle($radius, $color) {
	background-color: $color;
	border-radius: 50%;
	width: $radius;
	height: $radius;
	display: block;
}

@mixin height($height) {
	height: $height;
	line-height: $height;
}

@mixin switch($width, $height, $radius, $barColorLeft, $barColorRight, $circleColorOn, $colorColorOff) {
	position: relative;
	width: $width;
	user-select: none;
	
	.checkbox {
		display: none;
		
		&:checked + .switch-label .inner {
			margin-left: 0;
		}
		
		&:checked + .switch-label .switch {
			right: $radius/2;
		}
		
		&:not(:checked) + .switch-label .switch {
			background-color: $colorColorOff;
		}
	}
	
	.switch-label {
		display: block;
		overflow: hidden;
		cursor: pointer;
		margin: 0;
		
		.inner {
			display: block;
			width: 200%;
			margin-left: -100%;
			transition: margin .3s ease-in 0s;
			
			&:before,
			&:after {
				display: block;
				float: left;
				width: 50%;
				padding: 0;
				color: #fff;
				box-sizing: border-box;
				
				@include height($height);
			}
			
			&:before {
				content: '';
				padding-left: 10px;
				background-color: $barColorLeft;
			}
			
			&:after {
				content: '';
				padding-right: 10px;
				background-color: $barColorRight;
			}
		}
		
		.switch {
			display: block;
			width: $radius;
			height: $radius;
			margin: -$radius/2;
			background: $circleColorOn;
			border-radius: 50%;
			position: absolute;
			top: 0;
			bottom: 0;
			right: $width - $radius/2;
			transition: all 0.3s ease-in 0s;
			
			@include shadow('all', .2);
		}
	}
}

@mixin triangle($direction, $width, $height, $color) {
	width: 0;
	height: 0;
	border-style: solid;
	@if $direction == up {
		border-width: 0 $width/2 $height $width/2;
		border-color: transparent transparent $color transparent;
	} @else if $direction == down {
		border-width: $height $width/2 0 $height;
		border-color: $color transparent transparent transparent;
	} @else if $direction == left {
		border-width: $height/2 $width $height/2 0;
		border-color: transparent $color transparent transparent;
	} @else if $direction == right {
		border-width: $height/2 0 $height/2 $width;
		border-color: transparent transparent transparent $color;
	}
}

@mixin shadow($direction, $opacity: .15) {
	$color: #000;
	@if $direction == up {
		box-shadow: 0px -3px 5px 0px rgba($color, $opacity);
	} @else if $direction == down {
		box-shadow: 0px 3px 5px 0px rgba($color, $opacity);
	} @else if $direction == left {
		box-shadow: -3px 0px 5px 0px rgba($color, $opacity);
	} @else if $direction == right {
		box-shadow: 3px 0px 5px 0px rgba($color, $opacity);
	} @else if $direction == all {
		box-shadow: 0 0 5px rgba($color, $opacity);
	}
}